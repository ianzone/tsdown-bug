{"version":3,"file":"style.js","names":["src: string","$1: string","style: string","selector: ISelector","tagName: string","el: ParsedTaroElement","list: number[]","prev: ParsedTaroElement | null","styles: IStyle[]","selectors: ISelector[]"],"sources":["../../../src/dom-external/inner-html/style.ts"],"sourcesContent":["import { NodeType } from '../../dom/node_types'\nimport { unquote } from './utils'\n\nimport type { ParsedTaroElement } from './parser'\n\nconst LEFT_BRACKET = '{'\nconst RIGHT_BRACKET = '}'\nconst CLASS_SELECTOR = '.'\nconst ID_SELECTOR = '#'\nconst CHILD_COMBINATOR = '>'\nconst GENERAL_SIBLING_COMBINATOR = '~'\nconst ADJACENT_SIBLING_COMBINATOR = '+'\n\ninterface ISelector {\n  isChild: boolean\n  isGeneralSibling: boolean\n  isAdjacentSibling: boolean\n  tag: string | null\n  id: string | null\n  class: string[]\n  attrs: {\n    all: boolean\n    key: string\n    value?: string | null\n  }[]\n}\n\ninterface IStyle {\n  content: string\n  selectorList: ISelector[]\n}\n\nexport default class StyleTagParser {\n  styles: IStyle[] = []\n\n  extractStyle (src: string) {\n    const REG_STYLE = /<style\\s?[^>]*>((.|\\n|\\s)+?)<\\/style>/g\n    let html = src\n    // let html = src.replace(/\\n/g, '')\n\n    html = html.replace(REG_STYLE, (_, $1: string) => {\n      const style = $1.trim()\n      this.stringToSelector(style)\n      return ''\n    })\n\n    return html.trim()\n  }\n\n  stringToSelector (style: string) {\n    let lb = style.indexOf(LEFT_BRACKET)\n\n    while (lb > -1) {\n      const rb = style.indexOf(RIGHT_BRACKET)\n      const selectors = style.slice(0, lb).trim()\n\n      let content = style.slice(lb + 1, rb)\n      content = content.replace(/:(.*);/g, function (_, $1) {\n        const t = $1.trim().replace(/ +/g, '+++')\n        return `:${t};`\n      })\n      content = content.replace(/ /g, '')\n      content = content.replace(/\\+\\+\\+/g, ' ')\n\n      if (!(/;$/.test(content))) {\n        content += ';'\n      }\n      selectors.split(',').forEach(src => {\n        const selectorList = this.parseSelector(src)\n        this.styles.push({\n          content,\n          selectorList\n        })\n      })\n      style = style.slice(rb + 1)\n      lb = style.indexOf(LEFT_BRACKET)\n    }\n    // console.log('res this.styles: ', this.styles)\n  }\n\n  parseSelector (src: string) {\n    const list = src\n      .trim()\n      .replace(/ *([>~+]) */g, ' $1')\n      .replace(/ +/g, ' ')\n      .replace(/\\[\\s*([^[\\]=\\s]+)\\s*=\\s*([^[\\]=\\s]+)\\s*\\]/g, '[$1=$2]')\n      .split(' ')\n    const selectors = list.map(item => {\n      const firstChar = item.charAt(0)\n      const selector: ISelector = {\n        isChild: firstChar === CHILD_COMBINATOR,\n        isGeneralSibling: firstChar === GENERAL_SIBLING_COMBINATOR,\n        isAdjacentSibling: firstChar === ADJACENT_SIBLING_COMBINATOR,\n        tag: null,\n        id: null,\n        class: [],\n        attrs: []\n      }\n\n      item = item.replace(/^[>~+]/, '')\n\n      // 属性选择器\n      item = item.replace(/\\[(.+?)\\]/g, function (_, $1: string) {\n        const [key, value] = $1.split('=')\n        const all = $1.indexOf('=') === -1\n\n        const attr = {\n          all,\n          key,\n          value: all ? null : value\n        }\n        selector.attrs.push(attr)\n        return ''\n      })\n\n      item = item.replace(/([.#][A-Za-z0-9-_]+)/g, function (_, $1: string) {\n        if ($1[0] === ID_SELECTOR) {\n          // id 选择器\n          selector.id = $1.substr(1)\n        } else if ($1[0] === CLASS_SELECTOR) {\n          // class 选择器\n          selector.class.push($1.substr(1))\n        }\n        return ''\n      })\n\n      // 标签选择器\n      if (item !== '') {\n        selector.tag = item\n      }\n\n      return selector\n    })\n    return selectors\n  }\n\n  matchStyle (tagName: string, el: ParsedTaroElement, list: number[]): string {\n    const res = sortStyles(this.styles).reduce((str, { content, selectorList }, i) => {\n      let idx = list[i]\n      let selector = selectorList[idx]\n      const nextSelector = selectorList[idx + 1]\n\n      if (nextSelector?.isGeneralSibling || nextSelector?.isAdjacentSibling) {\n        selector = nextSelector\n        idx += 1\n        list[i] += 1\n      }\n\n      let isMatch = this.matchCurrent(tagName, el, selector)\n\n      if (isMatch && selector.isGeneralSibling) {\n        let prev: ParsedTaroElement | null = getPreviousElement(el)\n        while (prev) {\n          if (prev.h5tagName && this.matchCurrent(prev.h5tagName, prev, selectorList[idx - 1])) {\n            isMatch = true\n            break\n          }\n          prev = getPreviousElement(prev)\n          isMatch = false\n        }\n      }\n      if (isMatch && selector.isAdjacentSibling) {\n        const prev: ParsedTaroElement | null = getPreviousElement(el)\n        if (!prev || !prev.h5tagName) {\n          isMatch = false\n        } else {\n          const isSiblingMatch = this.matchCurrent(prev.h5tagName, prev, selectorList[idx - 1])\n          if (!isSiblingMatch) {\n            isMatch = false\n          }\n        }\n      }\n\n      if (isMatch) {\n        if (idx === selectorList.length - 1) {\n          return str + content\n        } else if (idx < selectorList.length - 1) {\n          list[i] += 1\n        }\n      } else {\n        // 直接子代组合器: >\n        if (selector.isChild && idx > 0) {\n          list[i] -= 1\n          if (this.matchCurrent(tagName, el, selectorList[list[i]])) {\n            list[i] += 1\n          }\n        }\n      }\n\n      return str\n    }, '')\n    return res\n  }\n\n  matchCurrent (tagName: string, el: ParsedTaroElement, selector: ISelector): boolean {\n    // 标签选择器\n    if (selector.tag && selector.tag !== tagName) return false\n\n    // id 选择器\n    if (selector.id && selector.id !== el.id) return false\n\n    // class 选择器\n    if (selector.class.length) {\n      const classList = el.className.split(' ')\n      for (let i = 0; i < selector.class.length; i++) {\n        const cls = selector.class[i]\n        if (classList.indexOf(cls) === -1) {\n          return false\n        }\n      }\n    }\n\n    // 属性选择器\n    if (selector.attrs.length) {\n      for (let i = 0; i < selector.attrs.length; i++) {\n        const { all, key, value } = selector.attrs[i]\n        if (all && !el.hasAttribute(key)) {\n          return false\n        } else {\n          const attr = el.getAttribute(key)\n          if (attr !== unquote(value || '')) {\n            return false\n          }\n        }\n      }\n    }\n\n    return true\n  }\n}\n\nfunction getPreviousElement (el: ParsedTaroElement): ParsedTaroElement | null {\n  const parent = el.parentElement\n  if (!parent) return null\n\n  const prev = el.previousSibling as ParsedTaroElement\n  if (!prev) return null\n\n  if (prev.nodeType === NodeType.ELEMENT_NODE) {\n    return prev\n  } else {\n    return getPreviousElement(prev)\n  }\n}\n\n// 根据 css selector 权重排序: 权重大的靠后\n// @WARN 不考虑伪类\n// https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Cascade_and_inheritance#specificity_2\nfunction sortStyles (styles: IStyle[]) {\n  return styles.sort((s1, s2) => {\n    const hundreds1 = getHundredsWeight(s1.selectorList)\n    const hundreds2 = getHundredsWeight(s2.selectorList)\n\n    if (hundreds1 !== hundreds2) return hundreds1 - hundreds2\n\n    const tens1 = getTensWeight(s1.selectorList)\n    const tens2 = getTensWeight(s2.selectorList)\n\n    if (tens1 !== tens2) return tens1 - tens2\n\n    const ones1 = getOnesWeight(s1.selectorList)\n    const ones2 = getOnesWeight(s2.selectorList)\n\n    return ones1 - ones2\n  })\n}\n\nfunction getHundredsWeight (selectors: ISelector[]) {\n  return selectors.reduce((pre, cur) => pre + (cur.id ? 1 : 0), 0)\n}\n\nfunction getTensWeight (selectors: ISelector[]) {\n  return selectors.reduce((pre, cur) => pre + cur.class.length + cur.attrs.length, 0)\n}\n\nfunction getOnesWeight (selectors: ISelector[]) {\n  return selectors.reduce((pre, cur) => pre + (cur.tag ? 1 : 0), 0)\n}\n"],"mappings":"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"}