{"version":3,"file":"form.js","names":["val: string","val: string | boolean | number | any[]","event: TaroEvent"],"sources":["../../src/dom/form.ts"],"sourcesContent":["import {\n  CHANGE,\n  INPUT,\n  TYPE,\n  VALUE\n} from '../constants'\nimport { TaroElement } from './element'\n\nimport type { TaroEvent } from './event'\n\nexport class FormElement extends TaroElement {\n  public get type () {\n    return this.props[TYPE] ?? ''\n  }\n\n  public set type (val: string) {\n    this.setAttribute(TYPE, val)\n  }\n\n  public get value () {\n    // eslint-disable-next-line dot-notation\n    const val = this.props[VALUE]\n    return val == null ? '' : val\n  }\n\n  public set value (val: string | boolean | number | any[]) {\n    this.setAttribute(VALUE, val)\n  }\n\n  public dispatchEvent (event: TaroEvent) {\n    if (event.mpEvent) {\n      const val = event.mpEvent.detail.value\n      if (event.type === CHANGE) {\n        this.props.value = val as string\n      } else if (event.type === INPUT) {\n        // Web 规范中表单组件的 value 应该跟着输入改变\n        // 只是改 this.props.value 的话不会进行 setData，因此这里修改 this.value。\n        // 只测试了 React、Vue3 input 组件的 onInput 事件，onChange 事件不确定有没有副作用，所以暂不修改。\n        this.value = val as string\n      }\n    }\n\n    return super.dispatchEvent(event)\n  }\n}\n"],"mappings":";;;;AAUA,IAAa,cAAb,cAAiC,YAAY;CAC3C,IAAW,OAAQ;AACjB,SAAO,KAAK,MAAM,SAAS;CAC5B;CAED,IAAW,KAAMA,KAAa;AAC5B,OAAK,aAAa,MAAM,IAAI;CAC7B;CAED,IAAW,QAAS;EAElB,MAAM,MAAM,KAAK,MAAM;AACvB,SAAO,OAAO,OAAO,KAAK;CAC3B;CAED,IAAW,MAAOC,KAAwC;AACxD,OAAK,aAAa,OAAO,IAAI;CAC9B;CAED,AAAO,cAAeC,OAAkB;AACtC,MAAI,MAAM,SAAS;GACjB,MAAM,MAAM,MAAM,QAAQ,OAAO;AACjC,OAAI,MAAM,SAAS,OACjB,MAAK,MAAM,QAAQ;YACV,MAAM,SAAS,MAIxB,MAAK,QAAQ;EAEhB;AAED,SAAO,MAAM,cAAc,MAAM;CAClC;AACF"}