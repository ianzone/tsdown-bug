{"version":3,"file":"class-list.js","names":["className: string","el: TaroElement","token: string","force: boolean","replacement_token: string"],"sources":["../../src/dom/class-list.ts"],"sourcesContent":["import type { TaroElement } from './element'\n\nexport class ClassList {\n  private el: TaroElement\n\n  private tokenList: string[] = []\n\n  constructor (className: string, el: TaroElement) {\n    this.el = el\n    className.trim().split(/\\s+/).forEach(token => this.tokenList.push(token))\n  }\n\n  public get value () {\n    return this.toString()\n  }\n\n  public get length () {\n    return this.tokenList.length\n  }\n\n  add () {\n    let index = 0\n    let updated = false\n\n    const tokens = arguments\n    const length = tokens.length\n    const tokenList = this.tokenList\n\n    do {\n      const token: string = tokens[index]\n\n      if (this.checkTokenIsValid(token) && !~tokenList.indexOf(token)) {\n        tokenList.push(token)\n\n        updated = true\n      }\n    } while (++index < length)\n\n    if (updated) {\n      this._update()\n    }\n  }\n\n  remove () {\n    let i = 0\n    let updated = false\n\n    const tokens = arguments\n    const length = tokens.length\n    const tokenList = this.tokenList\n\n    do {\n      const token = tokens[i] + ''\n\n      if (!this.checkTokenIsValid(token)) continue\n\n      const index = tokenList.indexOf(token)\n\n      if (~tokenList.indexOf(token)) {\n        tokenList.splice(index, 1)\n\n        updated = true\n      }\n    } while (++i < length)\n\n    if (updated) {\n      this._update()\n    }\n  }\n\n  contains (token: string) {\n    if (!this.checkTokenIsValid(token)) return false\n\n    return !!~this.tokenList.indexOf(token)\n  }\n\n  toggle (token: string, force: boolean) {\n    const result = this.contains(token)\n    const method = result ? force !== true && 'remove' : force !== false && 'add'\n\n    if (method) {\n      // @ts-ignore\n      this[method](token)\n    }\n\n    if (force === true || force === false) {\n      return force\n    } else {\n      return !result\n    }\n  }\n\n  replace (token: string, replacement_token: string) {\n    if (!this.checkTokenIsValid(token) || !this.checkTokenIsValid(replacement_token)) return\n\n    const index = this.tokenList.indexOf(token)\n\n    if (~index) {\n      this.tokenList.splice(index, 1, replacement_token)\n      this._update()\n    }\n  }\n\n  toString () {\n    return this.tokenList.filter(v => v !== '').join(' ')\n  }\n\n  private checkTokenIsValid (token: string) {\n    if (token === '' || /\\s/.test(token)) return false\n\n    return true\n  }\n\n  private _update () {\n    this.el.className = this.value\n  }\n}\n"],"mappings":";AAEA,IAAa,YAAb,MAAuB;CACrB,AAAQ;CAER,AAAQ,YAAsB,CAAE;CAEhC,YAAaA,WAAmBC,IAAiB;AAC/C,OAAK,KAAK;AACV,YAAU,MAAM,CAAC,MAAM,MAAM,CAAC,QAAQ,WAAS,KAAK,UAAU,KAAK,MAAM,CAAC;CAC3E;CAED,IAAW,QAAS;AAClB,SAAO,KAAK,UAAU;CACvB;CAED,IAAW,SAAU;AACnB,SAAO,KAAK,UAAU;CACvB;CAED,MAAO;EACL,IAAI,QAAQ;EACZ,IAAI,UAAU;EAEd,MAAM,SAAS;EACf,MAAM,SAAS,OAAO;EACtB,MAAM,YAAY,KAAK;AAEvB,KAAG;GACD,MAAMC,QAAgB,OAAO;AAE7B,OAAI,KAAK,kBAAkB,MAAM,MAAM,UAAU,QAAQ,MAAM,EAAE;AAC/D,cAAU,KAAK,MAAM;AAErB,cAAU;GACX;EACF,SAAQ,EAAE,QAAQ;AAEnB,MAAI,QACF,MAAK,SAAS;CAEjB;CAED,SAAU;EACR,IAAI,IAAI;EACR,IAAI,UAAU;EAEd,MAAM,SAAS;EACf,MAAM,SAAS,OAAO;EACtB,MAAM,YAAY,KAAK;AAEvB,KAAG;GACD,MAAM,QAAQ,OAAO,KAAK;AAE1B,QAAK,KAAK,kBAAkB,MAAM,CAAE;GAEpC,MAAM,QAAQ,UAAU,QAAQ,MAAM;AAEtC,QAAK,UAAU,QAAQ,MAAM,EAAE;AAC7B,cAAU,OAAO,OAAO,EAAE;AAE1B,cAAU;GACX;EACF,SAAQ,EAAE,IAAI;AAEf,MAAI,QACF,MAAK,SAAS;CAEjB;CAED,SAAUA,OAAe;AACvB,OAAK,KAAK,kBAAkB,MAAM,CAAE,QAAO;AAE3C,YAAU,KAAK,UAAU,QAAQ,MAAM;CACxC;CAED,OAAQA,OAAeC,OAAgB;EACrC,MAAM,SAAS,KAAK,SAAS,MAAM;EACnC,MAAM,SAAS,SAAS,UAAU,QAAQ,WAAW,UAAU,SAAS;AAExE,MAAI,OAEF,MAAK,QAAQ,MAAM;AAGrB,MAAI,UAAU,QAAQ,UAAU,MAC9B,QAAO;MAEP,SAAQ;CAEX;CAED,QAASD,OAAeE,mBAA2B;AACjD,OAAK,KAAK,kBAAkB,MAAM,KAAK,KAAK,kBAAkB,kBAAkB,CAAE;EAElF,MAAM,QAAQ,KAAK,UAAU,QAAQ,MAAM;AAE3C,OAAK,OAAO;AACV,QAAK,UAAU,OAAO,OAAO,GAAG,kBAAkB;AAClD,QAAK,SAAS;EACf;CACF;CAED,WAAY;AACV,SAAO,KAAK,UAAU,OAAO,OAAK,MAAM,GAAG,CAAC,KAAK,IAAI;CACtD;CAED,AAAQ,kBAAmBF,OAAe;AACxC,MAAI,UAAU,MAAM,KAAK,KAAK,MAAM,CAAE,QAAO;AAE7C,SAAO;CACR;CAED,AAAQ,UAAW;AACjB,OAAK,GAAG,YAAY,KAAK;CAC1B;AACF"}