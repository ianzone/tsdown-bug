{"version":3,"file":"element.js","names":["event: TaroEvent","val: string","text: string","qualifiedName: string","value: any","tagName: string","className: string","result: unknown","methodName: string","options: TFunc | Record<string, any>"],"sources":["../../src/dom/element.ts"],"sourcesContent":["import { EMPTY_OBJ, hooks, isArray, isFunction, isObject, isString, isUndefined, Shortcuts, toCamelCase, warn } from '@tarojs/shared'\n\nimport {\n  CATCH_VIEW,\n  CATCHMOVE,\n  CLASS,\n  CLICK_VIEW,\n  EVENT_CALLBACK_RESULT,\n  FOCUS,\n  ID,\n  PROPERTY_THRESHOLD,\n  PURE_VIEW,\n  STATIC_VIEW,\n  STYLE,\n  VIEW\n} from '../constants'\nimport { MutationObserver, MutationRecordType } from '../dom-external/mutation-observer'\nimport { extend, getComponentsAlias, isElement, isHasExtractProp, shortcutAttr } from '../utils'\nimport { ClassList } from './class-list'\nimport { eventSource } from './event-source'\nimport { TaroNode } from './node'\nimport { NodeType } from './node_types'\nimport { Style } from './style'\nimport { treeToArray } from './tree'\n\nimport type { Attributes, TFunc } from '../interface'\nimport type { TaroEvent } from './event'\n\nexport class TaroElement extends TaroNode {\n  public ctx?\n  public tagName: string\n  public props: Record<string, any> = {}\n  public style: Style\n  public dataset: Record<string, unknown> = EMPTY_OBJ\n  public innerHTML: string\n\n  public constructor () {\n    super()\n    this.nodeType = NodeType.ELEMENT_NODE\n    this.style = new Style(this)\n    hooks.call('patchElement', this)\n  }\n\n  private _stopPropagation (event: TaroEvent) {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let target = this\n    // eslint-disable-next-line no-cond-assign\n    while ((target = target.parentNode as this)) {\n      const listeners = target.__handlers[event.type]\n\n      if (!isArray(listeners)) {\n        continue\n      }\n\n      for (let i = listeners.length; i--;) {\n        const l = listeners[i]\n        l._stop = true\n      }\n    }\n  }\n\n  public get id (): string {\n    return this.getAttribute(ID)!\n  }\n\n  public set id (val: string) {\n    this.setAttribute(ID, val)\n  }\n\n  public get className (): string {\n    return this.getAttribute(CLASS) || ''\n  }\n\n  public set className (val: string) {\n    this.setAttribute(CLASS, val)\n  }\n\n  public get cssText (): string {\n    return this.getAttribute(STYLE) || ''\n  }\n\n  public get classList (): ClassList {\n    return new ClassList(this.className, this)\n  }\n\n  public get children (): TaroElement[] {\n    return this.childNodes.filter(isElement)\n  }\n\n  public get attributes (): Attributes[] {\n    const props = this.props\n    const propKeys = Object.keys(props)\n    const style = this.style.cssText\n    const attrs = propKeys.map(key => ({ name: key, value: props[key] }))\n    return attrs.concat(style ? { name: STYLE, value: style } : [])\n  }\n\n  public get textContent (): string {\n    let text = ''\n    const childNodes = this.childNodes\n\n    for (let i = 0; i < childNodes.length; i++) {\n      text += childNodes[i].textContent\n    }\n\n    return text\n  }\n\n  public set textContent (text: string) {\n    super.textContent = text\n  }\n\n  public hasAttribute (qualifiedName: string): boolean {\n    return !isUndefined(this.props[qualifiedName])\n  }\n\n  public hasAttributes (): boolean {\n    return this.attributes.length > 0\n  }\n\n  public get focus () {\n    return function () {\n      this.setAttribute(FOCUS, true)\n    }\n  }\n\n  // 兼容 Vue3，详情请见：https://github.com/NervJS/taro/issues/10579\n  public set focus (value) {\n    this.setAttribute(FOCUS, value)\n  }\n\n  public blur () {\n    this.setAttribute(FOCUS, false)\n  }\n\n  public setAttribute (qualifiedName: string, value: any): void {\n    process.env.NODE_ENV !== 'production' && warn(\n      isString(value) && value.length > PROPERTY_THRESHOLD,\n      `元素 ${this.nodeName} 的 ${qualifiedName} 属性值数据量过大，可能会影响渲染性能。考虑降低图片转为 base64 的阈值或在 CSS 中使用 base64。`\n    )\n\n    const isPureView = this.nodeName === VIEW && !isHasExtractProp(this) && !this.isAnyEventBinded()\n\n    if (qualifiedName !== STYLE) {\n      MutationObserver.record({\n        target: this,\n        type: MutationRecordType.ATTRIBUTES,\n        attributeName: qualifiedName,\n        oldValue: this.getAttribute(qualifiedName)\n      })\n    }\n\n    switch (qualifiedName) {\n      case STYLE:\n        this.style.cssText = value as string\n        break\n      case ID:\n        if (this.uid !== this.sid) {\n          // eventSource[sid] 永远保留，直到组件卸载\n          // eventSource[uid] 可变\n          eventSource.delete(this.uid)\n        }\n        value = String(value)\n        this.props[qualifiedName] = this.uid = value\n        eventSource.set(value, this)\n        break\n      default:\n        this.props[qualifiedName] = value as string\n\n        if (qualifiedName.startsWith('data-')) {\n          if (this.dataset === EMPTY_OBJ) {\n            this.dataset = Object.create(null)\n          }\n          this.dataset[toCamelCase(qualifiedName.replace(/^data-/, ''))] = value\n        }\n        break\n    }\n\n    // Serialization\n    if (!this._root) return\n\n    const componentsAlias = getComponentsAlias()\n    const _alias = componentsAlias[this.nodeName]\n    const viewAlias = componentsAlias[VIEW]._num\n    const clickViewAlias = componentsAlias[CLICK_VIEW]._num\n    const staticViewAlias = componentsAlias[STATIC_VIEW]._num\n    const catchViewAlias = componentsAlias[CATCH_VIEW]._num\n    const _path = this._path\n\n    qualifiedName = shortcutAttr(qualifiedName)\n\n    const qualifiedNameInCamelCase = toCamelCase(qualifiedName)\n    const payload = {\n      path: `${_path}.${qualifiedNameInCamelCase}`,\n      value: isFunction(value) ? () => value : value\n    }\n\n    hooks.call('modifySetAttrPayload', this, qualifiedName, payload, componentsAlias)\n\n    if (_alias) {\n      const qualifiedNameAlias = _alias[qualifiedNameInCamelCase] || qualifiedName\n      payload.path = `${_path}.${toCamelCase(qualifiedNameAlias)}`\n    }\n\n    this.enqueueUpdate(payload)\n\n    if (this.nodeName === VIEW) {\n      if (qualifiedNameInCamelCase === CATCHMOVE) {\n        // catchMove = true: catch-view\n        // catchMove = false: view or click-view or static-view\n        this.enqueueUpdate({\n          path: `${_path}.${Shortcuts.NodeName}`,\n          value: value ? catchViewAlias : (\n            this.isOnlyClickBinded() && !isHasExtractProp(this) ? clickViewAlias : (this.isAnyEventBinded() ? viewAlias : staticViewAlias)\n          )\n        })\n      } else if (isPureView && isHasExtractProp(this)) {\n        // pure-view => static-view\n        this.enqueueUpdate({\n          path: `${_path}.${Shortcuts.NodeName}`,\n          value: staticViewAlias\n        })\n      }\n    }\n  }\n\n  public removeAttribute (qualifiedName: string) {\n    const isStaticView = this.nodeName === VIEW && isHasExtractProp(this) && !this.isAnyEventBinded()\n\n    MutationObserver.record({\n      target: this,\n      type: MutationRecordType.ATTRIBUTES,\n      attributeName: qualifiedName,\n      oldValue: this.getAttribute(qualifiedName)\n    })\n\n    if (qualifiedName === STYLE) {\n      this.style.cssText = ''\n    } else {\n      const isInterrupt = hooks.call('onRemoveAttribute', this, qualifiedName)\n      if (isInterrupt) {\n        return\n      }\n\n      if (!this.props.hasOwnProperty(qualifiedName)) {\n        return\n      }\n      delete this.props[qualifiedName]\n    }\n\n    // Serialization\n    if (!this._root) return\n\n    const componentsAlias = getComponentsAlias()\n    const _alias = componentsAlias[this.nodeName]\n    const viewAlias = componentsAlias[VIEW]._num\n    const staticViewAlias = componentsAlias[STATIC_VIEW]._num\n    const pureViewAlias = componentsAlias[PURE_VIEW]._num\n    const clickViewAlias = componentsAlias[CLICK_VIEW]._num\n    const _path = this._path\n\n    qualifiedName = shortcutAttr(qualifiedName)\n\n    const qualifiedNameInCamelCase = toCamelCase(qualifiedName)\n    const payload = {\n      path: `${_path}.${qualifiedNameInCamelCase}`,\n      value: ''\n    }\n\n    hooks.call('modifyRmAttrPayload', this, qualifiedName, payload, componentsAlias)\n\n    if (_alias) {\n      const qualifiedNameAlias = _alias[qualifiedNameInCamelCase] || qualifiedName\n      payload.path = `${_path}.${toCamelCase(qualifiedNameAlias)}`\n    }\n\n    this.enqueueUpdate(payload)\n\n    if (this.nodeName === VIEW) {\n      if (qualifiedNameInCamelCase === CATCHMOVE) {\n        // catch-view => view or click-view or static-view or pure-view\n        this.enqueueUpdate({\n          path: `${_path}.${Shortcuts.NodeName}`,\n          value: this.isOnlyClickBinded() && !isHasExtractProp(this) ? clickViewAlias : (this.isAnyEventBinded() ? viewAlias : (isHasExtractProp(this) ? staticViewAlias : pureViewAlias))\n        })\n      } else if (isStaticView && !isHasExtractProp(this)) {\n        // static-view => pure-view\n        this.enqueueUpdate({\n          path: `${_path}.${Shortcuts.NodeName}`,\n          value: pureViewAlias\n        })\n      }\n    }\n  }\n\n  public getAttribute (qualifiedName: string): string {\n    const attr = qualifiedName === STYLE ? this.style.cssText : this.props[qualifiedName]\n    return attr ?? ''\n  }\n\n  public getElementsByTagName (tagName: string): TaroElement[] {\n    return treeToArray(this, (el) => {\n      return el.nodeName === tagName || (tagName === '*' && this !== el)\n    })\n  }\n\n  public getElementsByClassName (className: string): TaroElement[] {\n    const classNames = className.trim().split(/\\s+/)\n\n    return treeToArray(this, (el) => {\n      const classList = el.classList\n      return classNames.every(c => classList.contains(c))\n    })\n  }\n\n  public dispatchEvent (event: TaroEvent): boolean {\n    const cancelable = event.cancelable\n\n    const listeners = this.__handlers[event.type]\n\n    if (!isArray(listeners)) {\n      return false\n    }\n\n    for (let i = listeners.length; i--;) {\n      const listener = listeners[i]\n      let result: unknown\n      if (listener._stop) {\n        listener._stop = false\n      } else {\n        hooks.call('modifyDispatchEvent', event, this)\n        result = listener.call(this, event)\n      }\n      if ((result === false || event._end) && cancelable) {\n        event.defaultPrevented = true\n      }\n\n      if (!isUndefined(result) && event.mpEvent) {\n        const res = hooks.call('modifyTaroEventReturn', this, event, result)\n        if (res) { event.mpEvent[EVENT_CALLBACK_RESULT] = result }\n      }\n\n      if (event._end && event._stop) {\n        break\n      }\n    }\n\n    if (event._stop) {\n      this._stopPropagation(event)\n    }\n\n    return listeners != null\n  }\n\n  public addEventListener (type, handler, options) {\n    const name = this.nodeName\n    const SPECIAL_NODES = hooks.call('getSpecialNodes')!\n\n    let sideEffect = true\n    if (isObject<Record<string, any>>(options) && options.sideEffect === false) {\n      sideEffect = false\n      delete options.sideEffect\n    }\n\n    hooks.call('modifyAddEventListener', this, sideEffect, getComponentsAlias)\n\n    if (sideEffect !== false && !this.isAnyEventBinded() && SPECIAL_NODES.indexOf(name) > -1) {\n      const componentsAlias = getComponentsAlias()\n      const alias = componentsAlias[name]._num\n      this.enqueueUpdate({\n        path: `${this._path}.${Shortcuts.NodeName}`,\n        value: alias\n      })\n    }\n\n    super.addEventListener(type, handler, options)\n  }\n\n  public removeEventListener (type, handler, sideEffect = true) {\n    super.removeEventListener(type, handler)\n\n    const name = this.nodeName\n    const SPECIAL_NODES = hooks.call('getSpecialNodes')!\n\n    hooks.call('modifyRemoveEventListener', this, sideEffect, getComponentsAlias)\n\n    if (sideEffect !== false && !this.isAnyEventBinded() && SPECIAL_NODES.indexOf(name) > -1) {\n      const componentsAlias = getComponentsAlias()\n      const value = isHasExtractProp(this) ? `static-${name}` : `pure-${name}`\n      const valueAlias = componentsAlias[value]._num\n      this.enqueueUpdate({\n        path: `${this._path}.${Shortcuts.NodeName}`,\n        value: valueAlias\n      })\n    }\n  }\n\n  static extend (methodName: string, options: TFunc | Record<string, any>) {\n    extend(TaroElement, methodName, options)\n  }\n}\n"],"mappings":"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"}