{"version":3,"file":"document.js","names":["type: string","element: TaroElement","_svgNS: string","text: string","id: string | undefined | null","query: string","env"],"sources":["../../src/dom/document.ts"],"sourcesContent":["import { controlledComponent, isUndefined, toCamelCase } from '@tarojs/shared'\n\nimport {\n  A,\n  COMMENT,\n  DOCUMENT_ELEMENT_NAME,\n  ROOT_STR\n} from '../constants'\nimport { TaroElement } from '../dom/element'\nimport { createEvent } from '../dom/event'\nimport { eventSource } from '../dom/event-source'\nimport { FormElement } from '../dom/form'\nimport { NodeType } from '../dom/node_types'\nimport { TaroRootElement } from '../dom/root'\nimport { TaroText } from '../dom/text'\nimport env from '../env'\nimport { AnchorElement } from './anchor-element'\nimport { TransferElement } from './transfer'\n\nexport class TaroDocument extends TaroElement {\n  public documentElement: TaroElement\n  public head: TaroElement\n  public body: TaroElement\n  public createEvent = createEvent\n  cookie?: string\n\n  public constructor () {\n    super()\n    this.nodeType = NodeType.DOCUMENT_NODE\n    this.nodeName = DOCUMENT_ELEMENT_NAME\n  }\n\n  public createElement (type: string): TaroElement | TaroRootElement | FormElement {\n    const nodeName = type.toLowerCase()\n\n    let element: TaroElement\n    switch (true) {\n      case nodeName === ROOT_STR:\n        element = new TaroRootElement()\n        return element\n      case controlledComponent.has(nodeName):\n        element = new FormElement()\n        break\n      case nodeName === A:\n        element = new AnchorElement()\n        break\n      case nodeName === 'page-meta':\n      case nodeName === 'navigation-bar':\n        element = new TransferElement(toCamelCase(nodeName))\n        break\n      default:\n        element = new TaroElement()\n        break\n    }\n\n    element.nodeName = nodeName\n    element.tagName = type.toUpperCase()\n\n    return element\n  }\n\n  // an ugly fake createElementNS to deal with @vue/runtime-dom's\n  // support mounting app to svg container since vue@3.0.8\n  public createElementNS (_svgNS: string, type: string): TaroElement | TaroRootElement | FormElement {\n    return this.createElement(type)\n  }\n\n  public createTextNode (text: string): TaroText {\n    return new TaroText(text)\n  }\n\n  public getElementById<T extends TaroElement> (id: string | undefined | null): T | null {\n    const el = eventSource.get(id)\n    return isUndefined(el) ? null : el as T\n  }\n\n  public querySelector<T extends TaroElement> (query: string): T | null {\n    // 为了 Vue3 的乞丐版实现\n    if (/^#/.test(query)) {\n      return this.getElementById<T>(query.slice(1))\n    }\n    return null\n  }\n\n  public querySelectorAll () {\n    // fake hack\n    return []\n  }\n\n  // @TODO: @PERF: 在 hydrate 移除掉空的 node\n  public createComment (): TaroText {\n    const textnode = new TaroText('')\n    textnode.nodeName = COMMENT\n    return textnode\n  }\n\n  get defaultView () {\n    return env.window\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;AAmBA,IAAa,eAAb,cAAkC,YAAY;CAC5C,AAAO;CACP,AAAO;CACP,AAAO;CACP,AAAO,cAAc;CACrB;CAEA,AAAO,cAAe;AACpB,SAAO;AACP,OAAK,WAAW,SAAS;AACzB,OAAK,WAAW;CACjB;CAED,AAAO,cAAeA,MAA2D;EAC/E,MAAM,WAAW,KAAK,aAAa;EAEnC,IAAIC;AACJ,UAAQ,MAAR;GACE,KAAK,aAAa;AAChB,cAAU,IAAI;AACd,WAAO;GACT,KAAK,oBAAoB,IAAI,SAAS;AACpC,cAAU,IAAI;AACd;GACF,KAAK,aAAa;AAChB,cAAU,IAAI;AACd;GACF,KAAK,aAAa;GAClB,KAAK,aAAa;AAChB,cAAU,IAAI,gBAAgB,YAAY,SAAS;AACnD;GACF;AACE,cAAU,IAAI;AACd;EACH;AAED,UAAQ,WAAW;AACnB,UAAQ,UAAU,KAAK,aAAa;AAEpC,SAAO;CACR;CAID,AAAO,gBAAiBC,QAAgBF,MAA2D;AACjG,SAAO,KAAK,cAAc,KAAK;CAChC;CAED,AAAO,eAAgBG,MAAwB;AAC7C,SAAO,IAAI,SAAS;CACrB;CAED,AAAO,eAAuCC,IAAyC;EACrF,MAAM,KAAK,YAAY,IAAI,GAAG;AAC9B,SAAO,YAAY,GAAG,GAAG,OAAO;CACjC;CAED,AAAO,cAAsCC,OAAyB;AAEpE,MAAI,KAAK,KAAK,MAAM,CAClB,QAAO,KAAK,eAAkB,MAAM,MAAM,EAAE,CAAC;AAE/C,SAAO;CACR;CAED,AAAO,mBAAoB;AAEzB,SAAO,CAAE;CACV;CAGD,AAAO,gBAA2B;EAChC,MAAM,WAAW,IAAI,SAAS;AAC9B,WAAS,WAAW;AACpB,SAAO;CACR;CAED,IAAI,cAAe;AACjB,SAAOC,YAAI;CACZ;AACF"}