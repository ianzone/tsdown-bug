{"version":3,"file":"URLSearchParams.js","names":["match: string","dict: Record<string, string[]>","name: string","value: string","key: string","str: string","env","#dict","query: any[]"],"sources":["../../src/bom/URLSearchParams.ts"],"sourcesContent":["import { isArray } from '@tarojs/shared'\n\nimport env from '../env'\n\nconst findReg = /[!'()~]|%20|%00/g\nconst plusReg = /\\+/g\nconst replaceCharMap = {\n  '!': '%21',\n  \"'\": '%27',\n  '(': '%28',\n  ')': '%29',\n  '~': '%7E',\n  '%20': '+',\n  '%00': '\\x00',\n}\n\nfunction replacer (match: string) {\n  return replaceCharMap[match]\n}\n\nfunction appendTo (dict: Record<string, string[]>, name: string, value: string) {\n  const res = isArray(value) ? value.join(',') : value\n  if (name in dict) dict[name].push(res)\n  else dict[name] = [res]\n}\n\nfunction addEach (value: string, key: string) {\n  appendTo(this, key, value)\n}\n\nfunction decode (str: string) {\n  return decodeURIComponent(str.replace(plusReg, ' '))\n}\n\nfunction encode (str: string) {\n  return encodeURIComponent(str).replace(findReg, replacer)\n}\n\nexport const URLSearchParams = process.env.TARO_PLATFORM === 'web' ? env.window.URLSearchParams : class {\n  #dict = Object.create(null)\n\n  constructor (query) {\n    query ??= ''\n\n    const dict = this.#dict\n\n    if (typeof query === 'string') {\n      if (query.charAt(0) === '?') {\n        query = query.slice(1)\n      }\n      for (let pairs = query.split('&'), i = 0, length = pairs.length; i < length; i++) {\n        const value = pairs[i]\n        const index = value.indexOf('=')\n\n        // 针对不规范的 url 参数做容错处理，如：word=你%好\n        try {\n          if (index > -1) {\n            appendTo(dict, decode(value.slice(0, index)), decode(value.slice(index + 1)))\n          } else if (value.length) {\n            appendTo(dict, decode(value), '')\n          }\n        } catch (err) {\n          if (process.env.NODE_ENV !== 'production') {\n            console.warn(`[Taro warn] URL 参数 ${value} decode 异常`)\n          }\n        }\n      }\n    } else {\n      if (isArray(query)) {\n        for (let i = 0, length = query.length; i < length; i++) {\n          const value = query[i]\n          appendTo(dict, value[0], value[1])\n        }\n      } else if (query.forEach) {\n        query.forEach(addEach, dict)\n      } else {\n        for (const key in query) {\n          appendTo(dict, key, query[key])\n        }\n      }\n    }\n  }\n\n  append (name: string, value: string) {\n    appendTo(this.#dict, name, value)\n  }\n\n  delete (name: string) {\n    delete this.#dict[name]\n  }\n\n  get (name: string) {\n    const dict = this.#dict\n    return name in dict ? dict[name][0] : null\n  }\n\n  getAll (name: string) {\n    const dict = this.#dict\n    return name in dict ? dict[name].slice(0) : []\n  }\n\n  has (name: string) {\n    return name in this.#dict\n  }\n\n  keys () {\n    return Object.keys(this.#dict)\n  }\n\n  set (name: string, value: string) {\n    this.#dict[name] = ['' + value]\n  }\n\n  forEach (callback, thisArg) {\n    const dict = this.#dict\n    Object.getOwnPropertyNames(dict).forEach(function (name) {\n      dict[name].forEach(function (value: string) {\n        callback.call(thisArg, value, name, this)\n      }, this)\n    }, this)\n  }\n\n  toJSON () {\n    return {}\n  }\n\n  toString () {\n    const dict = this.#dict\n    const query: any[] = []\n    for (const key in dict) {\n      const name = encode(key)\n      for (let i = 0, value = dict[key]; i < value.length; i++) {\n        query.push(name + '=' + encode(value[i]))\n      }\n    }\n    return query.join('&')\n  }\n}\n"],"mappings":";;;;;;AAIA,MAAM,UAAU;AAChB,MAAM,UAAU;AAChB,MAAM,iBAAiB;CACrB,KAAK;CACL,KAAK;CACL,KAAK;CACL,KAAK;CACL,KAAK;CACL,OAAO;CACP,OAAO;AACR;AAED,SAAS,SAAUA,OAAe;AAChC,QAAO,eAAe;AACvB;AAED,SAAS,SAAUC,MAAgCC,MAAcC,OAAe;CAC9E,MAAM,MAAM,8BAAQ,MAAM,GAAG,MAAM,KAAK,IAAI,GAAG;AAC/C,KAAI,QAAQ,KAAM,MAAK,MAAM,KAAK,IAAI;KACjC,MAAK,QAAQ,CAAC,GAAI;AACxB;AAED,SAAS,QAASA,OAAeC,KAAa;AAC5C,UAAS,MAAM,KAAK,MAAM;AAC3B;AAED,SAAS,OAAQC,KAAa;AAC5B,QAAO,mBAAmB,IAAI,QAAQ,SAAS,IAAI,CAAC;AACrD;AAED,SAAS,OAAQA,KAAa;AAC5B,QAAO,mBAAmB,IAAI,CAAC,QAAQ,SAAS,SAAS;AAC1D;AAED,MAAa,kBAAkB,QAAQ,IAAI,kBAAkB,QAAQC,YAAI,OAAO,kBAAkB,MAAM;CACtG,QAAQ,OAAO,OAAO,KAAK;CAE3B,YAAa,OAAO;AAClB,YAAU;EAEV,MAAM,OAAO,KAAKC;AAElB,aAAW,UAAU,UAAU;AAC7B,OAAI,MAAM,OAAO,EAAE,KAAK,KAAK;AAC3B,YAAQ,MAAM,MAAM,EAAE;GACvB;AACD,QAAK,IAAI,QAAQ,MAAM,MAAM,IAAI,EAAE,IAAI,GAAG,SAAS,MAAM,QAAQ,IAAI,QAAQ,KAAK;IAChF,MAAM,QAAQ,MAAM;IACpB,MAAM,QAAQ,MAAM,QAAQ,IAAI;AAGhC,QAAI;AACF,SAAI,SAAS,GAAG;AACd,eAAS,MAAM,OAAO,MAAM,MAAM,GAAG,MAAM,CAAC,EAAE,OAAO,MAAM,MAAM,QAAQ,EAAE,CAAC,CAAC;KAC9E,WAAU,MAAM,QAAQ;AACvB,eAAS,MAAM,OAAO,MAAM,EAAE,GAAG;KAClC;IACF,SAAQ,KAAK;AACZ,SAAI,QAAQ,IAAI,aAAa,cAAc;AACzC,cAAQ,MAAM,qBAAqB,MAAM,YAAY;KACtD;IACF;GACF;EACF,OAAM;AACL,OAAI,8BAAQ,MAAM,EAAE;AAClB,SAAK,IAAI,IAAI,GAAG,SAAS,MAAM,QAAQ,IAAI,QAAQ,KAAK;KACtD,MAAM,QAAQ,MAAM;AACpB,cAAS,MAAM,MAAM,IAAI,MAAM,GAAG;IACnC;GACF,WAAU,MAAM,SAAS;AACxB,UAAM,QAAQ,SAAS,KAAK;GAC7B,OAAM;AACL,SAAK,MAAM,OAAO,OAAO;AACvB,cAAS,MAAM,KAAK,MAAM,KAAK;IAChC;GACF;EACF;CACF;CAED,OAAQL,MAAcC,OAAe;AACnC,WAAS,KAAKI,OAAO,MAAM,MAAM;CAClC;CAED,OAAQL,MAAc;AACpB,SAAO,KAAKK,MAAM;CACnB;CAED,IAAKL,MAAc;EACjB,MAAM,OAAO,KAAKK;AAClB,SAAO,QAAQ,OAAO,KAAK,MAAM,KAAK;CACvC;CAED,OAAQL,MAAc;EACpB,MAAM,OAAO,KAAKK;AAClB,SAAO,QAAQ,OAAO,KAAK,MAAM,MAAM,EAAE,GAAG,CAAE;CAC/C;CAED,IAAKL,MAAc;AACjB,SAAO,QAAQ,KAAKK;CACrB;CAED,OAAQ;AACN,SAAO,OAAO,KAAK,KAAKA,MAAM;CAC/B;CAED,IAAKL,MAAcC,OAAe;AAChC,OAAKI,MAAM,QAAQ,CAAC,KAAK,KAAM;CAChC;CAED,QAAS,UAAU,SAAS;EAC1B,MAAM,OAAO,KAAKA;AAClB,SAAO,oBAAoB,KAAK,CAAC,QAAQ,SAAU,MAAM;AACvD,QAAK,MAAM,QAAQ,SAAUJ,OAAe;AAC1C,aAAS,KAAK,SAAS,OAAO,MAAM,KAAK;GAC1C,GAAE,KAAK;EACT,GAAE,KAAK;CACT;CAED,SAAU;AACR,SAAO,CAAE;CACV;CAED,WAAY;EACV,MAAM,OAAO,KAAKI;EAClB,MAAMC,QAAe,CAAE;AACvB,OAAK,MAAM,OAAO,MAAM;GACtB,MAAM,OAAO,OAAO,IAAI;AACxB,QAAK,IAAI,IAAI,GAAG,QAAQ,KAAK,MAAM,IAAI,MAAM,QAAQ,KAAK;AACxD,UAAM,KAAK,OAAO,MAAM,OAAO,MAAM,GAAG,CAAC;GAC1C;EACF;AACD,SAAO,MAAM,KAAK,IAAI;CACvB;AACF"}