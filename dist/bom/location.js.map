{"version":3,"file":"location.js","names":["options: Options","#window","#reset","href: string","#noCheckUrl","#url","pageId: string","preValue: PreValue","#rollBack","val: string","#getPreValue","#checkUrlChange","#recordHistory","url: string","Location: typeof TaroLocation","env"],"sources":["../../src/bom/location.ts"],"sourcesContent":["import { isNumber, isString, warn } from '@tarojs/shared'\n\nimport { CONTEXT_ACTIONS } from '../constants'\nimport { getCurrentInstance } from '../current'\nimport { Events } from '../emitter/emitter'\nimport env from '../env'\nimport { RuntimeCache } from '../utils/cache'\nimport { TaroURLProvider } from './URL'\n\ntype PreValue = ReturnType<typeof TaroURLProvider.prototype._toRaw>\n\ntype Options = {\n  window: any\n}\ntype LocationContext = {\n  lastHref: string\n}\n\nconst INIT_URL = 'https://taro.com'\nconst cache = new RuntimeCache<LocationContext>('location')\n\nclass TaroLocation extends Events {\n  /* private property */\n  #url = new TaroURLProvider(INIT_URL)\n  #noCheckUrl = false\n  #window: any\n\n  constructor (options: Options) {\n    super()\n\n    this.#window = options.window\n\n    this.#reset()\n\n    this.on(\n      '__set_href_without_history__',\n      (href: string) => {\n        this.#noCheckUrl = true\n\n        const lastHash = this.#url.hash\n        this.#url.href = generateFullUrl(href)\n\n        if (lastHash !== this.#url.hash) {\n          this.#window.trigger('hashchange')\n        }\n\n        this.#noCheckUrl = false\n      },\n      null\n    )\n\n    // 切换上下文行为\n    this.on(\n      CONTEXT_ACTIONS.INIT,\n      () => {\n        this.#reset()\n      },\n      null\n    )\n\n    this.on(\n      CONTEXT_ACTIONS.RESTORE,\n      (pageId: string) => {\n        cache.set(pageId, {\n          lastHref: this.href,\n        })\n      },\n      null\n    )\n\n    this.on(\n      CONTEXT_ACTIONS.RECOVER,\n      (pageId: string) => {\n        // 数据恢复时，不需要执行跳转\n        if (cache.has(pageId)) {\n          const ctx = cache.get(pageId)!\n          this.#noCheckUrl = true\n          this.#url.href = ctx.lastHref\n          this.#noCheckUrl = false\n        }\n      },\n      null\n    )\n\n    this.on(\n      CONTEXT_ACTIONS.DESTORY,\n      (pageId: string) => {\n        cache.delete(pageId)\n      },\n      null\n    )\n  }\n\n  /* private method */\n  #reset () {\n    const Current = getCurrentInstance()\n    const router = Current.router\n    if (router) {\n      const { path, params } = router\n      const searchArr = Object.keys(params).map((key) => {\n        return `${key}=${params[key]}`\n      })\n      const searchStr = searchArr.length > 0 ? '?' + searchArr.join('&') : ''\n      const url = `${INIT_URL}${path.startsWith('/') ? path : '/' + path}${searchStr}`\n\n      this.#url = new TaroURLProvider(url)\n\n      this.trigger('__reset_history__', this.href)\n    }\n  }\n\n  #getPreValue (): PreValue {\n    return this.#url._toRaw()\n  }\n\n  #rollBack (href: string) {\n    this.#url.href = href\n  }\n\n  #recordHistory () {\n    this.trigger('__record_history__', this.href)\n  }\n\n  /**\n   * 校验url的变化，是否需要更新history\n   */\n  #checkUrlChange (preValue: PreValue): boolean {\n    if (this.#noCheckUrl) {\n      return false\n    }\n\n    const { protocol, hostname, port, pathname, search, hash } = this.#url._toRaw()\n\n    // 跨域三要素不允许修改\n    if (protocol !== preValue.protocol || hostname !== preValue.hostname || port !== preValue.port) {\n      this.#rollBack(preValue.href)\n      return false\n    }\n\n    // pathname\n    if (pathname !== preValue.pathname) {\n      return true\n    }\n\n    // search\n    if (search !== preValue.search) {\n      return true\n    }\n\n    // hashchange\n    if (hash !== preValue.hash) {\n      this.#window.trigger('hashchange')\n      return true\n    }\n\n    this.#rollBack(preValue.href)\n    return false\n  }\n\n  /* public property */\n  get protocol () {\n    return this.#url.protocol\n  }\n\n  set protocol (val: string) {\n    const REG = /^(http|https):$/i\n    if (!val || !isString(val) || !REG.test(val.trim())) return\n\n    val = val.trim()\n    const preValue = this.#getPreValue()\n    this.#url.protocol = val\n\n    if (this.#checkUrlChange(preValue)) this.#recordHistory()\n  }\n\n  get host () {\n    return this.#url.host\n  }\n\n  set host (val: string) {\n    if (!val || !isString(val)) return\n    val = val.trim()\n\n    const preValue = this.#getPreValue()\n    this.#url.host = val\n\n    if (this.#checkUrlChange(preValue)) this.#recordHistory()\n  }\n\n  get hostname () {\n    return this.#url.hostname\n  }\n\n  set hostname (val: string) {\n    if (!val || !isString(val)) return\n    val = val.trim()\n\n    const preValue = this.#getPreValue()\n    this.#url.hostname = val\n\n    if (this.#checkUrlChange(preValue)) this.#recordHistory()\n  }\n\n  get port () {\n    return this.#url.port\n  }\n\n  set port (val: string) {\n    const xVal = Number((val = val.trim()))\n    if (!isNumber(xVal) || xVal <= 0) return\n\n    const preValue = this.#getPreValue()\n    this.#url.port = val\n\n    if (this.#checkUrlChange(preValue)) this.#recordHistory()\n  }\n\n  get pathname () {\n    return this.#url.pathname\n  }\n\n  set pathname (val: string) {\n    if (!val || !isString(val)) return\n    val = val.trim()\n\n    const preValue = this.#getPreValue()\n    this.#url.pathname = val\n\n    if (this.#checkUrlChange(preValue)) this.#recordHistory()\n  }\n\n  get search () {\n    return this.#url.search\n  }\n\n  set search (val: string) {\n    if (!val || !isString(val)) return\n    val = val.trim()\n    val = val.startsWith('?') ? val : `?${val}`\n\n    const preValue = this.#getPreValue()\n    this.#url.search = val\n\n    if (this.#checkUrlChange(preValue)) this.#recordHistory()\n  }\n\n  get hash () {\n    return this.#url.hash\n  }\n\n  // 小程序的navigateTo存在截断hash字符串的问题\n  set hash (val: string) {\n    if (!val || !isString(val)) return\n    val = val.trim()\n    val = val.startsWith('#') ? val : `#${val}`\n\n    const preValue = this.#getPreValue()\n    this.#url.hash = val\n\n    if (this.#checkUrlChange(preValue)) this.#recordHistory()\n  }\n\n  get href () {\n    return this.#url.href\n  }\n\n  set href (val: string) {\n    const REG = /^(http:|https:)?\\/\\/.+/\n    if (!val || !isString(val) || !REG.test((val = val.trim()))) return\n\n    const preValue = this.#getPreValue()\n    this.#url.href = val\n\n    if (this.#checkUrlChange(preValue)) this.#recordHistory()\n  }\n\n  get origin () {\n    return this.#url.origin\n  }\n\n  set origin (val: string) {\n    const REG = /^(http:|https:)?\\/\\/.+/\n    if (!val || !isString(val) || !REG.test((val = val.trim()))) return\n\n    const preValue = this.#getPreValue()\n    this.#url.origin = val\n\n    if (this.#checkUrlChange(preValue)) this.#recordHistory()\n  }\n\n  /* public method */\n  assign () {\n    warn(true, '小程序环境中调用location.assign()无效.')\n  }\n\n  reload () {\n    warn(true, '小程序环境中调用location.reload()无效.')\n  }\n\n  replace (url: string) {\n    this.trigger('__set_href_without_history__', url)\n  }\n\n  toString () {\n    return this.href\n  }\n\n  // For debug\n  get cache () {\n    return cache\n  }\n}\n\nexport type { TaroLocation }\nexport const Location: typeof TaroLocation = process.env.TARO_PLATFORM === 'web' ? env.window.Location : TaroLocation\n\nfunction generateFullUrl (val = '') {\n  const origin = INIT_URL\n  if (/^[/?#]/.test(val)) {\n    return origin + val\n  }\n  return val\n}\n"],"mappings":"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"}